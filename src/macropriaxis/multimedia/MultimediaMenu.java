/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package macropriaxis.multimedia;

import macropriaxis.IndexGigas;

/**
 *
 * @author Carlo
 */
public class MultimediaMenu extends javax.swing.JFrame {

    /**
     * Creates new form MultimediaMenu
     */
    public MultimediaMenu() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        // Inicializar JavaFX en segundo plano con manejo de errores
        try {
            if (!JavaFXManager.isAvailable()) {
                JavaFXManager.initializeJavaFX();
                
                // Verificar si hubo errores en la inicialización
                if (!JavaFXManager.isAvailable()) {
                    javax.swing.JOptionPane.showMessageDialog(this, 
                        "Error al inicializar JavaFX. Algunas prácticas pueden no funcionar correctamente.\n" +
                        "Use el botón 'Limpiar Sistema' si hay problemas.", 
                        "Advertencia", 
                        javax.swing.JOptionPane.WARNING_MESSAGE);
                }
            }
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al inicializar el sistema multimedia: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en MultimediaMenu constructor: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButtonP1 = new javax.swing.JButton();
        jButtonP2 = new javax.swing.JButton();
        jButtonP3 = new javax.swing.JButton();
        jButtonP4 = new javax.swing.JButton();
        jButtonP5 = new javax.swing.JButton();
        jButtonP6 = new javax.swing.JButton();
        jButtonP7 = new javax.swing.JButton();
        jButtonP8 = new javax.swing.JButton();
        jButtonP9 = new javax.swing.JButton();
        jButtonVolver = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Multimedia Dr.Cristobal - JavaFX Prácticas");

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 51, 255));
        jLabel1.setText("Multimedia Dr.Cristobal");

        jLabel2.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Prácticas de JavaFX (1-9 y 11-20)");

        jButton1.setText("Práctica 11 - Despliegue de Etiqueta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Práctica 12 - Despliegue de Imagen 1");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Práctica 13 - Despliegue de Imagen 2");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Práctica 14 - Despliegue de Imagen 3");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Práctica 15 - Despliegue de Imagen 4");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Práctica 16 - Despliegue de Imagen 5");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Práctica 17 - Despliegue de Imagen 6");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Práctica 18 - Captura Ancho Imagen");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Práctica 19 - Evento Teclado");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Práctica 20 - Evento Escenas");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButtonVolver.setText("Volver al Menú Principal");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jButtonLimpiar.setText("Limpiar Sistema");
        jButtonLimpiar.setBackground(new java.awt.Color(255, 150, 150));
        jButtonLimpiar.setForeground(java.awt.Color.BLACK);
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        jButtonP1.setText("Práctica 1 - Código Base JavaFX");
        jButtonP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonP1ActionPerformed(evt);
            }
        });

        jButtonP2.setText("Práctica 2 - Un Escenario");
        jButtonP2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonP2ActionPerformed(evt);
            }
        });

        jButtonP3.setText("Práctica 3 - Dos Escenarios");
        jButtonP3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonP3ActionPerformed(evt);
            }
        });

        jButtonP4.setText("Práctica 4 - Dimensiones de Escenario");
        jButtonP4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonP4ActionPerformed(evt);
            }
        });

        jButtonP5.setText("Práctica 5 - Escenario Simple");
        jButtonP5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonP5ActionPerformed(evt);
            }
        });

        jButtonP6.setText("Práctica 6 - Estados del Escenario");
        jButtonP6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonP6ActionPerformed(evt);
            }
        });

        jButtonP7.setText("Práctica 7 - Escena Vacía");
        jButtonP7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonP7ActionPerformed(evt);
            }
        });

        jButtonP8.setText("Práctica 8 - Cambiando el Cursor");
        jButtonP8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonP8ActionPerformed(evt);
            }
        });

        jButtonP9.setText("Práctica 9 - Cambio de Escena");
        jButtonP9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonP9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonP1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(jButtonP2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonP3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonP4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonP5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonP6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonP7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonP8, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(jButtonP9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jButtonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonP1)
                    .addComponent(jButtonP8)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonP2)
                    .addComponent(jButtonP9)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonP3)
                    .addComponent(jButton1)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonP4)
                    .addComponent(jButton2)
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonP5)
                    .addComponent(jButton3)
                    .addComponent(jButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonP6)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonP7)
                    .addComponent(jButton5))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVolver)
                    .addComponent(jButtonLimpiar)
                    .addComponent(jButtonSalir))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Práctica 11 - Despliegue de Etiqueta
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica11_DespliegueEtiqueta.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 11: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 11: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Práctica 12 - Despliegue de Imagen 1
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica12_DespliegueImagen1.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 12: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 12: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Práctica 13 - Despliegue de Imagen 2
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica13_DespliegueImagen2.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 13: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 13: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Práctica 14 - Despliegue de Imagen 3
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica14_DespliegueImagen3.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 14: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 14: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // Práctica 15 - Despliegue de Imagen 4
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica15_DespliegueImagen4.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 15: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 15: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // Práctica 16 - Despliegue de Imagen 5
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica16_DespliegueImagen5.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 16: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 16: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // Práctica 17 - Despliegue de Imagen 6
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica17_DespliegueImagen6.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 17: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 17: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // Práctica 18 - Captura Ancho Imagen
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica18_CapturaAnchoImagen.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 18: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 18: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // Práctica 19 - Evento Teclado
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica19_EventoTeclado.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 19: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 19: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // Práctica 20 - Evento Escenas
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica20_EventoEscenas.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 20: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 20: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        // Volver al menú principal
        IndexGigas indexGigas = new IndexGigas();
        indexGigas.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        try {
            int confirmacion = javax.swing.JOptionPane.showConfirmDialog(this, 
                "¿Está seguro de que desea limpiar el sistema multimedia?\n" +
                "Esto cerrará todas las prácticas abiertas y reiniciará JavaFX.", 
                "Confirmar Limpieza", 
                javax.swing.JOptionPane.YES_NO_OPTION,
                javax.swing.JOptionPane.WARNING_MESSAGE);
            
            if (confirmacion == javax.swing.JOptionPane.YES_OPTION) {
                // Mostrar mensaje de progreso
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Limpiando sistema multimedia...", 
                    "Limpieza en Progreso", 
                    javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                // Resetear el sistema JavaFX
                macropriaxis.multimedia.JavaFXManager.reset();
                
                // Esperar un poco para que se complete el reset
                Thread.sleep(1000);
                
                // Reinicializar JavaFX
                macropriaxis.multimedia.JavaFXManager.initializeJavaFX();
                
                // Verificar que se inicializó correctamente
                if (macropriaxis.multimedia.JavaFXManager.isAvailable()) {
                    javax.swing.JOptionPane.showMessageDialog(this, 
                        "Sistema multimedia limpiado y reiniciado correctamente.\n" +
                        "Ahora puede ejecutar las prácticas normalmente.", 
                        "Limpieza Completada", 
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, 
                        "Sistema limpiado pero JavaFX no se pudo reinicializar.\n" +
                        "Intente reiniciar la aplicación completa.", 
                        "Advertencia", 
                        javax.swing.JOptionPane.WARNING_MESSAGE);
                }
            }
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al limpiar el sistema: " + e.getMessage() + "\n" +
                "Se recomienda reiniciar la aplicación completa.", 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en limpieza del sistema: " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButtonP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonP1ActionPerformed
        // Práctica 1 - Código Base JavaFX
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica01_CodigoBase.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 1: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 1: " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonP1ActionPerformed

    private void jButtonP2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonP2ActionPerformed
        // Práctica 2 - Un Escenario
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica02_UnEscenario.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 2: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 2: " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonP2ActionPerformed

    private void jButtonP3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonP3ActionPerformed
        // Práctica 3 - Dos Escenarios
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica03_DosEscenarios.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 3: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 3: " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonP3ActionPerformed

    private void jButtonP4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonP4ActionPerformed
        // Práctica 4 - Dimensiones de Escenario
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica04_DimensionesEscenario.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 4: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 4: " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonP4ActionPerformed

    private void jButtonP5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonP5ActionPerformed
        // Práctica 5 - Escenario Simple
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica05_EscenarioSimple.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 5: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 5: " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonP5ActionPerformed

    private void jButtonP6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonP6ActionPerformed
        // Práctica 6 - Estados del Escenario
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica06_EstadosEscenario.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 6: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 6: " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonP6ActionPerformed

    private void jButtonP7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonP7ActionPerformed
        // Práctica 7 - Escena Vacía
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica07_EscenaVacia.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 7: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 7: " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonP7ActionPerformed

    private void jButtonP8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonP8ActionPerformed
        // Práctica 8 - Cambiando el Cursor
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica08_CambiandoCursor.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 8: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 8: " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonP8ActionPerformed

    private void jButtonP9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonP9ActionPerformed
        // Práctica 9 - Cambio de Escena
        try {
            if (!JavaFXManager.isAvailable()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "JavaFX no está disponible. Use el botón 'Limpiar Sistema' para reiniciar.", 
                    "JavaFX no disponible", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            JavaFXManager.executePractice(() -> {
                macropriaxis.multimedia.practicas.Practica09_CambioEscena.ejecutar();
            });
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al ejecutar Práctica 9: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            System.err.println("Error en Práctica 9: " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonP9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MultimediaMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MultimediaMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MultimediaMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MultimediaMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MultimediaMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonP1;
    private javax.swing.JButton jButtonP2;
    private javax.swing.JButton jButtonP3;
    private javax.swing.JButton jButtonP4;
    private javax.swing.JButton jButtonP5;
    private javax.swing.JButton jButtonP6;
    private javax.swing.JButton jButtonP7;
    private javax.swing.JButton jButtonP8;
    private javax.swing.JButton jButtonP9;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}